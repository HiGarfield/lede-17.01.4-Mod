From 056a86932523e021432c929fc6c2ef8c7eef4cb7 Mon Sep 17 00:00:00 2001
From: HiGarfield <HiGarfield@126.com>
Date: Tue, 28 Oct 2025 11:34:11 +0800
Subject: [PATCH] fix build errors on older platforms

---
 src/config.c    | 28 ++++++++++++++++------------
 src/dhcpv6-ia.c |  3 ++-
 src/odhcpd.c    |  6 ++++--
 src/odhcpd.h    | 16 ++++++++--------
 4 files changed, 30 insertions(+), 23 deletions(-)

--- a/src/config.c
+++ b/src/config.c
@@ -945,7 +945,7 @@ static int parse_dnr_str(char *str, stru
 			continue;
 
 		switch (svc_key) {
-		case DNR_SVC_MANDATORY:
+		case DNR_SVC_MANDATORY: {
 			uint16_t mkeys[DNR_SVC_MAX];
 
 			svc_val_len = 0;
@@ -977,8 +977,9 @@ static int parse_dnr_str(char *str, stru
 			memcpy(dnr.svc + dnr.svc_len + 4, mkeys, svc_val_len);
 			dnr.svc_len += 4 + svc_val_len;
 			break;
+		}
 
-		case DNR_SVC_ALPN:
+		case DNR_SVC_ALPN: {
 			size_t len_off;
 
 			tmp = realloc(dnr.svc, dnr.svc_len + 4);
@@ -1015,8 +1016,9 @@ static int parse_dnr_str(char *str, stru
 			svc_val_len_be = ntohs(svc_val_len);
 			memcpy(dnr.svc + len_off, &svc_val_len_be, sizeof(svc_val_len_be));
 			break;
+		}
 
-		case DNR_SVC_PORT:
+		case DNR_SVC_PORT: {
 			uint16_t port;
 
 			if (sscanf(svc_val_str, "%" SCNu16, &port) != 1) {
@@ -1037,6 +1039,7 @@ static int parse_dnr_str(char *str, stru
 			memcpy(dnr.svc + dnr.svc_len + 4, &port, sizeof(port));
 			dnr.svc_len += 6;
 			break;
+		}
 
 		case DNR_SVC_NO_DEFAULT_ALPN:
 			/* fall through */
@@ -1078,16 +1081,17 @@ static int parse_dnr_str(char *str, stru
 		}
 	}
 
-done:
-	struct dnr_options *tmp;
-	tmp = realloc(iface->dnr, (iface->dnr_cnt + 1) * sizeof(dnr));
-	if (!tmp)
-		goto err;
-
-	iface->dnr = tmp;
-	memcpy(iface->dnr + iface->dnr_cnt, &dnr, sizeof(dnr));
-	iface->dnr_cnt++;
-	return 0;
+done: {
+		struct dnr_options *tmp;
+		tmp = realloc(iface->dnr, (iface->dnr_cnt + 1) * sizeof(dnr));
+		if (!tmp)
+			goto err;
+
+		iface->dnr = tmp;
+		memcpy(iface->dnr + iface->dnr_cnt, &dnr, sizeof(dnr));
+		iface->dnr_cnt++;
+		return 0;
+	}
 
 err:
 	free(dnr.adn);
--- a/src/dhcpv6-ia.c
+++ b/src/dhcpv6-ia.c
@@ -1549,6 +1549,7 @@ ssize_t dhcpv6_ia_handle_IAs(uint8_t *bu
 
 		/* Find an existing assignment */
 		struct dhcp_assignment *c, *a = NULL;
+		uint16_t status;
 		list_for_each_entry(c, &iface->ia_assignments, head) {
 			/* If we're looking for a PD, is this a PD? */
 			if (is_pd && !(c->flags & OAF_DHCPV6_PD))
@@ -1622,7 +1623,7 @@ ssize_t dhcpv6_ia_handle_IAs(uint8_t *bu
 
 proceed:
 		/* Generic message handling */
-		uint16_t status = DHCPV6_STATUS_OK;
+		status = DHCPV6_STATUS_OK;
 		if (a && a->managed_size < 0)
 			return -1;
 
--- a/src/odhcpd.c
+++ b/src/odhcpd.c
@@ -36,6 +36,7 @@
 #include <sys/socket.h>
 #include <sys/ioctl.h>
 #include <sys/epoll.h>
+#include <sys/stat.h>
 #include <sys/types.h>
 #include <sys/wait.h>
 #include <sys/syscall.h>
@@ -116,7 +117,7 @@ int main(int argc, char **argv)
 
 	while ((opt = getopt(argc, argv, "c:l:fh")) != -1) {
 		switch (opt) {
-		case 'c':
+		case 'c': {
 			struct stat sb;
 			char *path;
 
@@ -133,6 +134,7 @@ int main(int argc, char **argv)
 			fprintf(stderr, "Configuration will be read from %s\n", path);
 			config.uci_cfgdir = path;
 			break;
+		}
 
 		case 'l':
 			config.log_level = (atoi(optarg) & LOG_PRIMASK);
@@ -562,7 +564,7 @@ void odhcpd_urandom(void *data, size_t l
 		if (len == 0)
 			return;
 
-		r = getrandom(data, len, GRND_INSECURE);
+		r = getrandom(data, len, 0);
 		if (r < 0) {
 			if (errno == EINTR)
 				continue;
--- a/src/odhcpd.h
+++ b/src/odhcpd.h
@@ -76,14 +76,14 @@ extern struct config config;
 extern struct sys_conf sys_conf;
 
 void __iflog(int lvl, const char *fmt, ...);
-#define debug(fmt, ...)     __iflog(LOG_DEBUG, fmt __VA_OPT__(, ) __VA_ARGS__)
-#define info(fmt, ...)      __iflog(LOG_INFO, fmt __VA_OPT__(, ) __VA_ARGS__)
-#define notice(fmt, ...)    __iflog(LOG_NOTICE, fmt __VA_OPT__(, ) __VA_ARGS__)
-#define warn(fmt, ...)      __iflog(LOG_WARNING, fmt __VA_OPT__(, ) __VA_ARGS__)
-#define error(fmt, ...)     __iflog(LOG_ERR, fmt __VA_OPT__(, ) __VA_ARGS__)
-#define critical(fmt, ...)  __iflog(LOG_CRIT, fmt __VA_OPT__(, ) __VA_ARGS__)
-#define alert(fmt, ...)     __iflog(LOG_ALERT, fmt __VA_OPT__(, ) __VA_ARGS__)
-#define emergency(fmt, ...) __iflog(LOG_EMERG, fmt __VA_OPT__(, ) __VA_ARGS__)
+#define debug(fmt, ...)     __iflog(LOG_DEBUG, fmt, ##__VA_ARGS__)
+#define info(fmt, ...)      __iflog(LOG_INFO, fmt, ##__VA_ARGS__)
+#define notice(fmt, ...)    __iflog(LOG_NOTICE, fmt, ##__VA_ARGS__)
+#define warn(fmt, ...)      __iflog(LOG_WARNING, fmt, ##__VA_ARGS__)
+#define error(fmt, ...)     __iflog(LOG_ERR, fmt, ##__VA_ARGS__)
+#define critical(fmt, ...)  __iflog(LOG_CRIT, fmt, ##__VA_ARGS__)
+#define alert(fmt, ...)     __iflog(LOG_ALERT, fmt, ##__VA_ARGS__)
+#define emergency(fmt, ...) __iflog(LOG_EMERG, fmt, ##__VA_ARGS__)
 
 
 struct odhcpd_event {
