From 1d9755d57ebb104e8384b9587d1e60a40ddae732 Mon Sep 17 00:00:00 2001
From: xiaobaishu1 <53339509+xiaobaishu1@users.noreply.github.com>
Date: Thu, 14 Aug 2025 23:17:14 +0800
Subject: [PATCH] fix(security): prevent buffer overflow in domain_rule.c

Added parameter validation at function entry (checking pointers and buffer sizes)
Fixed buffer write operations to prevent overflow when adding suffix dots
Ensured proper null-termination order
---
 src/dns_conf.c | 13 ++++++++-----
 1 file changed, 8 insertions(+), 5 deletions(-)

--- a/src/dns_conf.c
+++ b/src/dns_conf.c
@@ -1378,8 +1378,9 @@ static int _config_setup_domain_key(cons
 
 	int len = strlen(domain);
 	domain_len = len;
-	if (len >= domain_key_max_len - 3) {
-		tlog(TLOG_ERROR, "domain %s too long", domain);
+	if (!domain_key || !domain_key_len || domain_key_max_len <= 0 || 
+		len + 3 > domain_key_max_len) {
+		tlog(TLOG_ERROR, "invalid parameters or domain too long: %s (max %d)", domain, domain_key_max_len - 3);
 		return -1;
 	}
 
@@ -1406,12 +1407,14 @@ static int _config_setup_domain_key(cons
 		}
 	} else if (len > 0) {
 		/* suffix match */
-		domain_key[len + 1] = '.';
-		len++;
+		if (len + 2 < domain_key_max_len) {
+			domain_key[len + 1] = '.';
+			len++;
+		}
 	}
 
-	domain_key[len + 1] = 0;
 	domain_key[0] = '.';
+	domain_key[len + 1] = '\0';
 
 	*domain_key_len = len + 1;
 	if (root_rule_only) {
