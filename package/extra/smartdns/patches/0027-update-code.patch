From 6ae13d24b089eb6dde63ba6a66535a519df31bfa Mon Sep 17 00:00:00 2001
From: Nick Peng <pymumu@gmail.com>
Date: Tue, 21 Oct 2025 22:58:10 +0800
Subject: [PATCH] update code

---
 src/dns_plugin.c | 14 +++++++-------
 src/fast_ping.c  |  3 ++-
 src/smartdns.c   |  2 --
 3 files changed, 9 insertions(+), 10 deletions(-)

--- a/src/dns_plugin.c
+++ b/src/dns_plugin.c
@@ -54,7 +54,7 @@ struct dns_plugins {
 };
 
 static struct dns_plugins plugins;
-static int is_plugin_init;
+static atomic_t is_plugin_init = ATOMIC_INIT(0);
 
 int smartdns_plugin_func_server_recv(struct dns_packet *packet, unsigned char *inpacket, int inpacket_len,
 									 struct sockaddr_storage *local, socklen_t local_len, struct sockaddr_storage *from,
@@ -63,7 +63,7 @@ int smartdns_plugin_func_server_recv(str
 	struct dns_plugin_ops *chain = NULL;
 	int ret = 0;
 
-	if (is_plugin_init == 0) {
+	if (unlikely(atomic_read(&is_plugin_init) == 0)) {
 		return 0;
 	}
 
@@ -86,7 +86,7 @@ void smartdns_plugin_func_server_complet
 {
 	struct dns_plugin_ops *chain = NULL;
 
-	if (is_plugin_init == 0) {
+	if (unlikely(atomic_read(&is_plugin_init) == 0)) {
 		return;
 	}
 
@@ -106,7 +106,7 @@ void smartdns_plugin_func_server_log_cal
 {
 	struct dns_plugin_ops *chain = NULL;
 
-	if (is_plugin_init == 0) {
+	if (unlikely(atomic_read(&is_plugin_init) == 0)) {
 		return;
 	}
 
@@ -347,19 +347,19 @@ static int _dns_plugin_remove_all(void)
 
 int dns_server_plugin_init(void)
 {
-	if (is_plugin_init == 1) {
+	if (atomic_read(&is_plugin_init) == 1) {
 		return 0;
 	}
 
 	hash_init(plugins.plugin);
 	INIT_LIST_HEAD(&plugins.list);
-	is_plugin_init = 1;
+	atomic_set(&is_plugin_init, 1);
 	return 0;
 }
 
 void dns_server_plugin_exit(void)
 {
-	if (is_plugin_init == 0) {
+	if (unlikely(atomic_read(&is_plugin_init) == 0)) {
 		return;
 	}
 
--- a/src/fast_ping.c
+++ b/src/fast_ping.c
@@ -1627,7 +1627,8 @@ static struct fast_ping_packet *_fast_pi
 		return NULL;
 	}
 
-	if ((uintptr_t)(packet_data + hlen) % __alignof__(void *) == 0 || ping.no_unprivileged_ping == 0) {
+	int align = __alignof__(struct fast_ping_packet);
+	if (((uintptr_t)(packet_data + hlen) % align) == 0 && ping.no_unprivileged_ping == 0) {
 		packet = (struct fast_ping_packet *)(packet_data + hlen);
 	} else {
 		int copy_len = sizeof(ping_host->recv_packet_buffer);
--- a/src/smartdns.c
+++ b/src/smartdns.c
@@ -136,7 +136,6 @@ static int _smartdns_load_from_resolv_fi
 	int ret = -1;
 
 	int filed_num = 0;
-	int line_num = 0;
 
 	fp = fopen(resolv_file, "r");
 	if (fp == NULL) {
@@ -145,7 +144,6 @@ static int _smartdns_load_from_resolv_fi
 	}
 
 	while (fgets(line, MAX_LINE_LEN, fp)) {
-		line_num++;
 		filed_num = sscanf(line, "%63s %1023[^\r\n]s", key, value);
 
 		if (filed_num != 2) {
